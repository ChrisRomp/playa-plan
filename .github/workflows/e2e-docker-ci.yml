name: E2E Tests (Docker Compose)

permissions:
  contents: read
  actions: write

on:
  workflow_dispatch: # Manual trigger for testing
  # Uncomment to enable on push/PR when ready
  # push:
  #   branches: [ main ]
  #   paths:
  #     - 'tests/**'
  #     - 'apps/web/**'
  #     - 'apps/api/**'
  #     - 'playwright.config.ts'
  #     - 'docker-compose.e2e.yml'
  #     - 'package.json'
  #     - 'package-lock.json'
  # pull_request:
  #   branches: [ main ]
  #   paths:
  #     - 'tests/**'
  #     - 'apps/web/**'
  #     - 'apps/api/**'
  #     - 'playwright.config.ts'
  #     - 'docker-compose.e2e.yml'
  #     - 'package.json'
  #     - 'package-lock.json'

jobs:
  e2e-tests-docker:
    name: End-to-End Tests with Docker Compose
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 22.x
      uses: actions/setup-node@v3
      with:
        node-version: 22.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx --yes playwright install --with-deps
    
    - name: Setup test environment
      run: |
        cp .env.sample .env
        # Add test-specific environment variables
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/playaplan_test" >> .env
        echo "JWT_SECRET=test-secret-key-for-ci" >> .env
        echo "NODE_ENV=development" >> .env
    
    - name: Start services with Docker Compose
      run: |
        echo "Starting all services with Docker Compose..."
        docker-compose -f docker-compose.e2e.yml up -d --build
        echo "Services started, waiting for health checks..."
    
    - name: Wait for services to be ready
      run: |
        echo "Waiting for all services to be healthy..."
        timeout 120 bash -c 'until docker-compose -f docker-compose.e2e.yml ps --services --filter health=healthy | wc -l | grep -q "3"; do
          echo "Waiting for services to be healthy..."
          docker-compose -f docker-compose.e2e.yml ps
          sleep 5
        done'
        echo "All services are healthy!"
    
    - name: Show service status
      run: |
        echo "=== Service Status ==="
        docker-compose -f docker-compose.e2e.yml ps
        echo ""
        echo "=== Service Logs ==="
        docker-compose -f docker-compose.e2e.yml logs --tail=20
    
    - name: Run Database Setup
      run: |
        echo "Setting up database..."
        docker-compose -f docker-compose.e2e.yml exec -T api npx prisma migrate deploy
        docker-compose -f docker-compose.e2e.yml exec -T api npx prisma db seed
    
    - name: Verify services are accessible
      run: |
        echo "Testing API health endpoint..."
        curl -f http://localhost:3000/health
        echo ""
        echo "Testing Web server..."
        curl -f http://localhost:5173
    
    - name: Run Playwright tests
      run: npx --yes playwright test
      env:
        CI: true
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-docker
        path: playwright-report/
        retention-days: 10
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-docker
        path: test-results/
        retention-days: 10
    
    - name: Show service logs on failure
      if: failure()
      run: |
        echo "=== All Service Logs ==="
        docker-compose -f docker-compose.e2e.yml logs
    
    - name: Cleanup
      if: always()
      run: |
        echo "Stopping and removing services..."
        docker-compose -f docker-compose.e2e.yml down -v
        docker system prune -f