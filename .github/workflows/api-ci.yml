name: API CI
permissions:
  contents: read

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - '.github/workflows/api-ci.yml'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - '.github/workflows/api-ci.yml'
      - 'package.json'
      - 'package-lock.json'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: playa_plan_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      working-directory: apps/api
      run: npm ci
    
    - name: Generate Prisma client
      working-directory: apps/api
      run: npx prisma generate
    
    - name: Run migrations
      working-directory: apps/api
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/playa_plan_test?schema=public
    
    - name: Build API
      working-directory: apps/api
      run: npm run build
      
    - name: Test API
      working-directory: apps/api
      run: npm run test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/playa_plan_test?schema=public
        JWT_SECRET: test_jwt_secret
        JWT_EXPIRES_IN: 7d
