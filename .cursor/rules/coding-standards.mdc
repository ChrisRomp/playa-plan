---
description: 
globs: 
alwaysApply: true
---
# Coding Standards

## General Guidelines

- Use clear, easily-readable code everywhere
- Document all code with appropriate JSDoc comments
- Follow Test-Driven Development (TDD) practices
- Adhere to SOLID principles
- Keep methods focused on a single responsibility 
- Maximum method length: 20 lines where practical
- Keep nesting level <= 2 where practical
- Use descriptive naming:
  - Methods: verb + noun (e.g., validateCredentials)
  - Classes: noun (e.g., CredentialValidator)
  - Tests: should + behavior (e.g., shouldValidateCredentials)
- No abbreviations unless universally known
- Avoid magic numbers and strings - use constants
- Use TypeScript strict mode and proper typing

## Frontend-specific

- Use functional components with hooks
- Keep components small and focused
- Use data fetching abstractions consistently
- Implement proper form validation
- Test components in isolation
- Follow accessibility standards (WCAG 2.2)

## Backend-specific

- Implement proper request validation
- Use dependency injection
- Implement appropriate error handling
- Document APIs with OpenAPI/Swagger
- Apply rate limiting for sensitive endpoints
- Implement proper authentication checks
- Log appropriately (avoid sensitive data)

## Database/Prisma

- Write clear, focused migrations
- Use appropriate indices
- Document schema relationships
- Use transactions where appropriate

## Security Practices

- Validate all user inputs
- Apply CSRF protection
- Implement proper CORS policy
- Use parameterized queries
- Apply principle of least privilege
- Never expose sensitive information in logs
- Use HTTPS only

See detailed specifications in [app-spec.md](mdc:docs/app-spec.md)
